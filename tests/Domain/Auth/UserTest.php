<?php

namespace App\Tests\Domain\Auth;

use App\Domain\Auth\Entity\User;
use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;

class UserTest extends KernelTestCase
{
    private $validator;
  public function setUp(): void
    {
        $this->validator = self::getContainer()->get('validator');
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testEntityWithGoodInfo(): void
    {
        $user = $this->getEntityProvider();

        $validate = $this->validator->validate($user);
        $this->assertCount(0, $validate);
    }

    public function testEntityWithbadEmail(): void
    {
        $user = $this->getEntityProvider()->setEmail('Test');
        $validate = $this->validator->validate($user);
        $this->assertCount(1, $validate);
    }

    public function testWithaTooShortPassword(): void
    {
        $user = $this->getEntityProvider()->setPassword('Test');
        $validate = $this->validator->validate($user);
        $this->assertCount(1, $validate);
    }

    public function testWithToken(): void
    {
        $user = $this->getEntityProvider()->setConfirmationToken('Test');
        $validate = $this->validator->validate($user);
        $this->assertCount(0, $validate);
    }

    public function testLastLoginAt(): void
    {
        $user = $this->getEntityProvider()->setLastLogin(new \DateTimeImmutable());
        $validate = $this->validator->validate($user);
        $this->assertCount(0, $validate);
    }

    public function testLastLoginIp(): void
    {
        $user = $this->getEntityProvider()->setLastLogin(new \DateTimeImmutable());
        $validate = $this->validator->validate($user);
        $this->assertCount(0, $validate);
    }

    public function testGetUsername(): void
    {
        $user = $this->getEntityProvider();

        $this->assertSame('linkmat', $user->getUserIdentifier());
        $this->assertSame('linkmat', $user->getUsername());
    }

    public function testGetEmail(): void
    {
        $user = $this->getEntityProvider();

        $this->assertSame('test@email.com', $user->getEmail());
    }

    public function testGetConfimationTokent(): void
    {
        $user = $this->getEntityProvider();

        $this->assertSame('test', $user->getConfirmationToken());
    }



    private function getEntityProvider(): User
    {
        return  (new User())
            ->setRoles(['ROLE_USER'])
            ->setUsername('linkmat')
            ->setEmail('test@email.com')
            ->setRegisterAt(new \DateTimeImmutable('2022-02-08 04:48:31'))
            ->setConfirmationToken('test')
            ->setLastLogin(new \DateTimeImmutable())
            ->setLastLoginIP('192.169.0.0')
            ->setUpdatedAt(new \DateTimeImmutable());
    }
}
