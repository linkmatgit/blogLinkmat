<?php

namespace App\Tests\Domain\Blog;

use App\Domain\Auth\Entity\User;
use App\Domain\Blog\Entity\Category;
use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;

class CategoryTest extends KernelTestCase
{
    private $validator;
    public function setUp(): void
    {
        $this->validator = self::getContainer()->get('validator');
        parent::setUp(); // TODO: Change the autogenerated stub
    }


    public function testSetNameTooShort(): void
    {

        $cat = $this->getEntityProvider()->setName('5');
        $validator = $this->validator->validate($cat);

        $this->assertCount(1, $validator);
    }

    public function testSetBlankName(): void
    {
        $cat = $this->getEntityProvider()->setName('');
        $validator = $this->validator->validate($cat);
        $this->assertCount(2, $validator);
    }
    public function testValidData(): void
    {
        $this->assertCount(0, $this->validator->validate($this->getEntityProvider()));
    }
    public function testShortDescription(): void
    {
        $cat = $this->getEntityProvider()->setDescription('te');
        $valid = $this->validator->validate($cat);
        $this->assertCount(1, $valid);
    }
    public function testBlankDescription(): void
    {
        $cat = $this->getEntityProvider()->setDescription('');
        $valid = $this->validator->validate($cat);
        $this->assertCount(2, $valid);
    }
    public function testGetTrueOnline(): void
    {
        $this->assertTrue($this->getEntityProvider()->isOnline());
    }
    public function testGetUser(): void
    {
        $cat = $this->getEntityProvider()->getAuthor()->getUserIdentifier();
        $this->assertSame('linkmat', $cat);
    }
    public function testGetName(): void
    {
        $cat = $this->getEntityProvider()->getName();
        $this->assertSame('test444', $cat);
    }

    private function getEntityProvider(): Category
    {
        $user = (new User())->setUsername('linkmat');
        return(new Category())
            ->setUpdatedAt(new \DateTime())
            ->setCreatedAt(new \DateTime())
            ->setName('test444')
            ->setDescription('test test test')
            ->setOnline(true)
            ->setAuthor($user);
    }
}
