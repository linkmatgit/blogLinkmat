<?php

namespace App\Tests\Domain\Blog;

use App\Domain\Auth\Entity\User;
use App\Domain\Blog\Entity\Post;
use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;

class ContentTest extends KernelTestCase
{
    private $validator;
    public function setUp(): void
    {
        $this->validator = self::getContainer()->get('validator');
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function getGetValidData(): void
    {
        $user = $this->getEntityProvider();

        $validate = $this->validator->validate($user);
        $this->assertCount(0, $validate);
    }
    public function testSetUser(): void
    {
        $user = (new User())->setUsername('linkmat');
        $post = $this->getEntityProvider()->setAuthor($user);
        $validator = $this->validator->validate($post);
        $this->assertCount(0, $validator);
    }

    public function testGetUser(): void
    {
        $post = $this->getEntityProvider()->getAuthor()->getUsername();
        $this->assertSame('linkmat', $post);
    }


    public function testGetCategory(): void
    {
        $post = $this->getEntityProvider()->getCategory();
        $this->assertSame('category', $post);
    }

    public function testSetTitle(): void
    {
        $post = $this->getEntityProvider()->setTitle('test');
        $validator = $this->validator->validate($post);
        $this->assertCount(0, $validator);
    }
    public function testContentWithShort(): void
    {
        $post = $this->getEntityProvider()->setContent('test');
        $post2 = $this->getEntityProvider()->setContent('');
        $validator = $this->validator->validate($post);
        $validator2 = $this->validator->validate($post2);
        $this->assertCount(1, $validator);
        $this->assertCount(2, $validator2);
    }
    public function testGetContent(): void
    {
        $post = $this->getEntityProvider()->getContent();
        $this->assertSame('test tes tewst test', $post);
    }

    public function testGetShortTitle(): void
    {
        $post = $this->getEntityProvider()->setTitle('st');
        $post2 = $this->getEntityProvider()->setTitle('');
        $post3 = $this->getEntityProvider()->setTitle('test');
        $validator3 = $this->validator->validate($post3);
        $validator = $this->validator->validate($post);
        $validator2 = $this->validator->validate($post2);
        $this->assertCount(1, $validator);
        $this->assertCount(2, $validator2);
        $this->assertCount(0, $validator3);
    }
    public function testGetTitle(): void
    {
        $post = $this->getEntityProvider()->getTitle();
        $this->assertSame('test', $post);
    }

    public function testGetOnline(): void
    {
        $post = $this->getEntityProvider()->isOnline();
        $this->assertTrue($post);
    }
    private function getEntityProvider(): Post
    {
        $user = (new User())->setUsername('linkmat');
        return(new Post())
            ->setUpdatedAt(new \DateTime())
            ->setCreatedAt(new \DateTime())
            ->setOnline(true)
            ->setContent('test tes tewst test')
            ->setTitle('test')
            ->setCategory('category')
            ->setAuthor($user);
    }
}
